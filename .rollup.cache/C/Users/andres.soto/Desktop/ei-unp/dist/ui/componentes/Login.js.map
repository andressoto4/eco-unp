{"version":3,"file":"Login.js","sourceRoot":"","sources":["../../../ui/componentes/Login.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { IdUsuarioContext, IdContrasegnaContext } from \"../contexs/IngresoContex\";\r\nimport { validarInputUsuario } from \"../funciones/ValidacionInput\";\r\nimport { RiLockPasswordFill } from \"react-icons/ri\";\r\nimport { FaUser, FaRegEye, FaRegEyeSlash } from \"react-icons/fa\";\r\nimport { Col, FormGroup, FormLabel, FormControl, InputGroup, Button } from \"react-bootstrap\";\r\n\r\ninterface UsuarioProps {\r\n    usuarioRef: React.RefObject<HTMLInputElement>;\r\n}\r\n\r\ninterface ContrasegnaProps {\r\n    contrasegnaRef: React.RefObject<HTMLInputElement>;\r\n}\r\n\r\ninterface SocialIconProps {\r\n    color: string;\r\n    IconoRedSocial: React.ComponentType<{ size: string; color: string }>;\r\n    descripcion: string;\r\n    enlace: string;\r\n}\r\n\r\n// Componente del input de usuario\r\nconst Usuario: React.FC<UsuarioProps> = ({ usuarioRef }) => {\r\n    const usuarioContext = useContext(IdUsuarioContext);\r\n    if (!usuarioContext) {\r\n        throw new Error(\"usuarioContext debe estar dentro de un IdUsuarioProvider\");\r\n    }\r\n    const { setIdUsuario } = usuarioContext;\r\n    const [usuario, setUsuario] = useState<string>(\"\");\r\n    const [isValid, setIsValid] = useState<boolean>(true);\r\n\r\n    const handleUsuarioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value.replace(/\\s/g, \"\");\r\n        const validValue = validarInputUsuario(value);\r\n        setUsuario(validValue);\r\n        setIsValid(validValue === value);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Col xl={12} md={12} xs={12}>\r\n\r\n                <FormGroup className=\"mb-3\" controlId=\"validacionUsuario\">\r\n                    <FormLabel>Usuario</FormLabel>\r\n                    <InputGroup>\r\n\r\n                        <InputGroup.Text id=\"email-icon\">\r\n                            <FaUser />\r\n                        </InputGroup.Text>\r\n\r\n                        <FormControl\r\n                            className=\"rounded-end\"\r\n                            type=\"text\"\r\n                            ref={usuarioRef}\r\n                            value={usuario}\r\n                            onChange={handleUsuarioChange}\r\n                            onInput={handleUsuarioChange}\r\n                            placeholder=\"nombre.apellido\"\r\n                            pattern=\"^[a-z]+\\.[a-z]+$\"\r\n                            maxLength={100}\r\n                            isInvalid={!isValid}\r\n                            required\r\n                        />\r\n\r\n                        {/* <FormControl.Feedback type=\"invalid\">\r\n                            Por favor ingrese un usuario en el formato nombre.apellido, solo minúsculas.\r\n                        </FormControl.Feedback> */}\r\n\r\n                    </InputGroup>\r\n                </FormGroup>\r\n\r\n            </Col>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst Contrasegna: React.FC<ContrasegnaProps> = ({ contrasegnaRef }) => {\r\n    const contrasegnaContext = useContext(IdContrasegnaContext);\r\n    if (!contrasegnaContext) {\r\n        throw new Error(\r\n            \"contrasegnaContext debe estar dentro de un IdContrasegnaProvider\"\r\n        );\r\n    }\r\n    const { setIdContrasegna } = contrasegnaContext;\r\n\r\n    const [contrasegna, setContrasegna] = useState<string>(\"\");\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n    const [isValid, setIsValid] = useState<boolean>(false);\r\n\r\n    const handleContrasegnaChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value.replace(/\\s/g, \"\");\r\n        setContrasegna(value);\r\n\r\n        if (value) {\r\n            setIsValid(true);\r\n            setIdContrasegna(value);\r\n        } else {\r\n            setIsValid(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Col xl={12} md={12} xs={12}>\r\n                <FormGroup className=\"mb-3\" controlId=\"validacionContrasegna\">\r\n                    <FormLabel>Contraseña</FormLabel>\r\n                    <InputGroup>\r\n                        <InputGroup.Text id=\"password-icon\">\r\n                            <RiLockPasswordFill />\r\n                        </InputGroup.Text>\r\n                        <FormControl\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            ref={contrasegnaRef}\r\n                            value={contrasegna}\r\n                            onChange={handleContrasegnaChange}\r\n                            placeholder=\"*****************\"\r\n                            maxLength={100}\r\n                            isValid={isValid}\r\n                            required\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            className=\"rounded-end\"\r\n                            variant=\"secondary\"\r\n                            onClick={() => {\r\n                                setShowPassword((prev) => !prev);\r\n                            }}\r\n                        >\r\n                            {showPassword ? (\r\n                                <FaRegEye color=\"#FFF\" />\r\n                            ) : (\r\n                                <FaRegEyeSlash color=\"#FFF\" />\r\n                            )}\r\n                        </Button>\r\n                        <FormControl.Feedback type=\"invalid\">\r\n                            Por favor ingresa una contrasegna\r\n                        </FormControl.Feedback>\r\n                    </InputGroup>\r\n                </FormGroup>\r\n            </Col>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst RedesSociales: React.FC<SocialIconProps> = ({ color, IconoRedSocial, descripcion, enlace }) => {\r\n\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const style = {\r\n        backgroundColor: isHovered ? '#365072' : color,\r\n        width: '37px',\r\n        height: '37px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: '50%',\r\n        marginTop: '2px',\r\n        marginRight: '8px',\r\n        position: 'relative' as 'relative',\r\n        cursor: 'pointer',\r\n    };\r\n\r\n    const tooltipStyle: React.CSSProperties = {\r\n        visibility: isHovered ? 'visible' : 'hidden',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n        color: '#365072',\r\n        textAlign: 'center',\r\n        borderRadius: '6px',\r\n        padding: '5px',\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: '120%',\r\n        left: '50%',\r\n        marginLeft: '-75px',\r\n        width: '150px',\r\n        fontWeight: '600'\r\n    };\r\n\r\n    return (\r\n        <a href={enlace} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>\r\n            <div\r\n                style={style}\r\n                onMouseEnter={() => setIsHovered(true)}\r\n                onMouseLeave={() => setIsHovered(false)}\r\n            >\r\n                <IconoRedSocial size={'1.2em'} color=\"#FFF\" />\r\n                <div style={tooltipStyle}>{descripcion}</div>\r\n            </div>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport { Usuario, Contrasegna, RedesSociales };"]}