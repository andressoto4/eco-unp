{"version":3,"file":"Recaptcha.js","sourceRoot":"","sources":["../../../ui/componentes/Recaptcha.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC3D,OAAO,SAAS,MAAM,wBAAwB,CAAC;AAC/C,OAAO,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAC;AAOtC,MAAM,SAAS,GAA6B,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE;IACpE,MAAM,YAAY,GAAG,MAAM,CAAY,IAAI,CAAC,CAAC;IAC7C,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC5C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;IACxD,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,QAAQ,CAAS,CAAC,CAAC,CAAC;IAE1C,MAAM,mBAAmB,GAAG,CAAC,KAAoB,EAAE,EAAE;QACnD,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC,CAAC;IAEF,MAAM,iBAAiB,GAAG,GAAG,EAAE;QAC7B,SAAS,CAAC,IAAI,CAAC,CAAC;QAChB,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,MAAM,kBAAkB,GAAG,GAAG,EAAE;QAC9B,QAAQ,CAAC,2DAA2D,CAAC,CAAC;QACtE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;YACzB,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAC7B,SAAS,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC;IACH,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAEV,OAAO,CACL,oBAAC,GAAG,IAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAC,yCAAyC,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE;QACtH,CAAC,MAAM,IAAI,6BAAK,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,GAAI;QAC7F,KAAK,IAAI,6BAAK,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,IAAG,KAAK,CAAO;QACrD,oBAAC,SAAS,IACR,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,YAAY,EACjB,SAAS,EAAC,MAAM,EAChB,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,mBAAmB,EAC7B,MAAM,EAAE,iBAAiB,EACzB,SAAS,EAAE,kBAAkB,GAC7B,CACE,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,OAAO,EAAE,SAAS,EAAE,CAAC","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\ninterface RecaptchaProps {\r\n  onChange: (token: string | null) => void;\r\n  sitekey: string;\r\n}\r\n\r\nconst Recaptcha: React.FC<RecaptchaProps> = ({ onChange, sitekey }) => {\r\n  const recaptchaRef = useRef<ReCAPTCHA>(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [key, setKey] = useState<number>(0);\r\n\r\n  const handleCaptchaChange = (token: string | null) => {\r\n    onChange(token);\r\n  };\r\n\r\n  const handleCaptchaLoad = () => {\r\n    setLoaded(true);\r\n    setError(null);\r\n  };\r\n\r\n  const handleCaptchaError = () => {\r\n    setError(\"Error al cargar reCAPTCHA. Por favor, intÃ©ntalo de nuevo.\");\r\n    setKey(prevKey => prevKey + 1); \r\n  };\r\n\r\n  useEffect(() => {\r\n    if (recaptchaRef.current) {\r\n      recaptchaRef.current.reset();\r\n      setLoaded(true);\r\n    }\r\n  }, [key]);\r\n\r\n  return (\r\n    <Col xl={12} md={9} xs={12} className=\"d-flex justify-content-center mt-4 mb-2\" style={{ width: '308px', height: '80px' }}>\r\n      {!loaded && <div style={{ width: '305px', height: '80px', backgroundColor: 'transparent' }} />}\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n      <ReCAPTCHA\r\n        key={key} \r\n        ref={recaptchaRef}\r\n        className=\"mb-3\"\r\n        sitekey={sitekey}\r\n        onChange={handleCaptchaChange}\r\n        onLoad={handleCaptchaLoad}\r\n        onErrored={handleCaptchaError}\r\n      />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport { Recaptcha };"]}