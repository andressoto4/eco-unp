{"version":3,"file":"UbicacionContext.js","sourceRoot":"","sources":["../../../form/contexts/UbicacionContext.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAa,MAAM,OAAO,CAAC;AAQ9E,uDAAuD;AACvD,MAAM,sBAAsB,GAAG,aAAa,CAAgB;IAC1D,EAAE,EAAE,GAAG;IACP,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC;CAChB,CAAC,CAAC;AACH,MAAM,8BAA8B,GAAG,aAAa,CAAgB;IAClE,EAAE,EAAE,GAAG;IACP,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC;CAChB,CAAC,CAAC;AACH,MAAM,2BAA2B,GAAG,aAAa,CAAgB;IAC/D,EAAE,EAAE,GAAG;IACP,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC;CAChB,CAAC,CAAC;AACH,MAAM,sBAAsB,GAAG,aAAa,CAAgB;IAC1D,EAAE,EAAE,GAAG;IACP,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC;CAChB,CAAC,CAAC;AAMH,8BAA8B;AAC9B,MAAM,iBAAiB,GAAqC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC3E,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,QAAQ,CAAS,GAAG,CAAC,CAAC;IACpE,MAAM,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,GACzD,QAAQ,CAAS,GAAG,CAAC,CAAC;IACxB,MAAM,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,GAAG,QAAQ,CAAS,GAAG,CAAC,CAAC;IAC9E,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,QAAQ,CAAS,GAAG,CAAC,CAAC;IAEpE,OAAO,CACL,oBAAC,sBAAsB,CAAC,QAAQ,IAC9B,KAAK,EAAE,EAAE,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE,kBAAkB,EAAE;QAEzD,oBAAC,8BAA8B,CAAC,QAAQ,IACtC,KAAK,EAAE;gBACL,EAAE,EAAE,uBAAuB;gBAC3B,KAAK,EAAE,0BAA0B;aAClC;YAED,oBAAC,2BAA2B,CAAC,QAAQ,IACnC,KAAK,EAAE,EAAE,EAAE,EAAE,oBAAoB,EAAE,KAAK,EAAE,uBAAuB,EAAE;gBAEnE,oBAAC,sBAAsB,CAAC,QAAQ,IAC9B,KAAK,EAAE,EAAE,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAExD,QAAQ,CACuB,CACG,CACC,CACV,CACnC,CAAC;AACJ,CAAC,CAAC;AAEF,gCAAgC;AAChC,MAAM,kBAAkB,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;AACpE,MAAM,0BAA0B,GAAG,GAAG,EAAE,CACtC,UAAU,CAAC,8BAA8B,CAAC,CAAC;AAC7C,MAAM,uBAAuB,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;AAC9E,MAAM,kBAAkB,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;AAEpE,OAAO,EAAE,iBAAiB,EAAE,CAAC;AAC7B,OAAO,EACL,kBAAkB,EAClB,0BAA0B,EAC1B,uBAAuB,EACvB,kBAAkB,GACnB,CAAC;AACF,OAAO,EACL,sBAAsB,EACtB,8BAA8B,EAC9B,2BAA2B,EAC3B,sBAAsB,GACvB,CAAC","sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from \"react\";\r\n\r\n// Definir interfaces para los contextos\r\ninterface IdContextType {\r\n  id: string;\r\n  setID: (value: string) => void;\r\n}\r\n\r\n// Crear contextos individuales con valores por defecto\r\nconst IdPaisUbicacionContext = createContext<IdContextType>({\r\n  id: \"0\",\r\n  setID: () => {},\r\n});\r\nconst IdDepartamentoUbicacionContext = createContext<IdContextType>({\r\n  id: \"0\",\r\n  setID: () => {},\r\n});\r\nconst IdMunicipioUbicacionContext = createContext<IdContextType>({\r\n  id: \"0\",\r\n  setID: () => {},\r\n});\r\nconst IdZonaUbicacionContext = createContext<IdContextType>({\r\n  id: \"0\",\r\n  setID: () => {},\r\n});\r\n\r\ninterface UbicacionProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Crear un provider combinado\r\nconst UbicacionProvider: React.FC<UbicacionProviderProps> = ({ children }) => {\r\n  const [idPaisUbicacion, setIDPaisUbicacion] = useState<string>(\"0\");\r\n  const [idDepartamentoUbicacion, setIDDepartamentoUbicacion] =\r\n    useState<string>(\"0\");\r\n  const [idMunicipioUbicacion, setIDMunicipioUbicacion] = useState<string>(\"0\");\r\n  const [idZonaUbicacion, setIdZonaUbicacion] = useState<string>(\"0\");\r\n\r\n  return (\r\n    <IdPaisUbicacionContext.Provider\r\n      value={{ id: idPaisUbicacion, setID: setIDPaisUbicacion }}\r\n    >\r\n      <IdDepartamentoUbicacionContext.Provider\r\n        value={{\r\n          id: idDepartamentoUbicacion,\r\n          setID: setIDDepartamentoUbicacion,\r\n        }}\r\n      >\r\n        <IdMunicipioUbicacionContext.Provider\r\n          value={{ id: idMunicipioUbicacion, setID: setIDMunicipioUbicacion }}\r\n        >\r\n          <IdZonaUbicacionContext.Provider\r\n            value={{ id: idZonaUbicacion, setID: setIdZonaUbicacion }}\r\n          >\r\n            {children}\r\n          </IdZonaUbicacionContext.Provider>\r\n        </IdMunicipioUbicacionContext.Provider>\r\n      </IdDepartamentoUbicacionContext.Provider>\r\n    </IdPaisUbicacionContext.Provider>\r\n  );\r\n};\r\n\r\n// Hooks para usar los contextos\r\nconst useIdPaisUbicacion = () => useContext(IdPaisUbicacionContext);\r\nconst useIdDepartamentoUbicacion = () =>\r\n  useContext(IdDepartamentoUbicacionContext);\r\nconst useIdMunicipioUbicacion = () => useContext(IdMunicipioUbicacionContext);\r\nconst useIdZonaUbicacion = () => useContext(IdZonaUbicacionContext);\r\n\r\nexport { UbicacionProvider };\r\nexport {\r\n  useIdPaisUbicacion,\r\n  useIdDepartamentoUbicacion,\r\n  useIdMunicipioUbicacion,\r\n  useIdZonaUbicacion,\r\n};\r\nexport {\r\n  IdPaisUbicacionContext,\r\n  IdDepartamentoUbicacionContext,\r\n  IdMunicipioUbicacionContext,\r\n  IdZonaUbicacionContext,\r\n};\r\n"]}